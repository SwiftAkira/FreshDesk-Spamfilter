# Freshdesk Configuration
FRESHDESK_DOMAIN=your-domain.freshdesk.com
FRESHDESK_API_KEY=your_freshdesk_api_key_here

# Google Vertex AI Configuration (Primary AI Provider)
# Ensure the Vertex AI API is enabled in your Google Cloud project.
GOOGLE_PROJECT_ID=your-gcp-project-id    python create_sample_tickets.py
GOOGLE_LOCATION=europe-west2 # e.g., us-central1, europe-west2
GEMMA_MODEL_ID=gemini-1.0-pro # Or your specific Gemma model ID/endpoint for Vertex AI GenerativeModel
# IMPORTANT: Set the GOOGLE_APPLICATION_CREDENTIALS environment variable in your shell or Lambda environment
# to the absolute path of your Google Cloud service account JSON key file.
# Example (for local shell): export GOOGLE_APPLICATION_CREDENTIALS="/path/to/your/service-account-key.json"

# Spam Filter Configuration
SPAM_THRESHOLD=0.7 # (0.0 - 1.0) Confidence threshold for initial spam detection
AUTO_CLOSE_SPAM_THRESHOLD=0.75 # (0.0 - 1.0) Confidence threshold for automatically closing a ticket as spam. Must be >= SPAM_THRESHOLD.
CHECK_INTERVAL_MINUTES=5 # How often to check for new tickets (for main.py continuous mode)
MAX_TICKETS_PER_BATCH=50 # Maximum tickets to process in one batch (for main.py continuous mode)
PROCESS_NEW_TICKETS_ONLY=true # (true/false) Whether to process only new tickets (status 2) or all open tickets

# Logging Configuration
LOG_LEVEL=INFO # DEBUG, INFO, WARNING, ERROR, CRITICAL

# Application Mode (for local execution with main.py)
# DRY_RUN_MODE=false # Set to true (e.g., by using the --test flag with main.py) to simulate actions without making changes to Freshdesk

# --- Optional: OLLAMA Configuration (For local testing if not using Vertex AI, or if VertexAIClient fails) ---
# OLLAMA_HOST=http://localhost:11434
# OLLAMA_MODEL=gemma2:2b